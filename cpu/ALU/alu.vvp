#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_00C2A1A0 .scope module, "alu_tb" "alu_tb" 2 86;
 .timescale 0 0;
v012BF850_0 .var "ALUOP", 4 0;
v012BFDD0_0 .net "ALURESULT", 31 0, v012BF170_0; 1 drivers
v012BFB68_0 .net "EQ_FLAG", 0 0, L_012C2508; 1 drivers
v012BFA60_0 .net "LTU_FLAG", 0 0, L_012C1A68; 1 drivers
v012BFE28_0 .net "LT_FLAG", 0 0, L_012C14E8; 1 drivers
v012BFE80_0 .var "OPERAND1", 31 0;
v012BFF88_0 .var "OPERAND2", 31 0;
S_00C2A090 .scope module, "myalu" "alu" 2 94, 2 8, S_00C2A1A0;
 .timescale 0 0;
L_00C215C0/d .functor XOR 32, v012BFE80_0, v012BFF88_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_00C215C0 .delay (1,1,1) L_00C215C0/d;
L_00C215F8/d .functor OR 32, v012BFE80_0, v012BFF88_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_00C215F8 .delay (1,1,1) L_00C215F8/d;
L_00C21630/d .functor AND 32, v012BFE80_0, v012BFF88_0, C4<11111111111111111111111111111111>, C4<11111111111111111111111111111111>;
L_00C21630 .delay (1,1,1) L_00C21630/d;
L_012C2508 .functor NOT 1, L_012C1330, C4<0>, C4<0>, C4<0>;
v00C2E900_0 .net "ADD", 31 0, L_012BFBC0; 1 drivers
v00C2E958_0 .net "AND", 31 0, L_00C21630; 1 drivers
v00C2E9B0_0 .net "DATA1", 31 0, v012BFE80_0; 1 drivers
v012BEDA8_0 .net "DATA2", 31 0, v012BFF88_0; 1 drivers
v012BF0C0_0 .net "DIV", 31 0, L_012C13E0; 1 drivers
v012BF118_0 .net "DIVU", 31 0, L_012C1A10; 1 drivers
v012BEF08_0 .alias "EQ_FLAG", 0 0, v012BFB68_0;
v012BEE00_0 .alias "LTU_FLAG", 0 0, v012BFA60_0;
v012BEEB0_0 .alias "LT_FLAG", 0 0, v012BFE28_0;
v012BF068_0 .net "MUL", 31 0, L_012C12D8; 1 drivers
v012BEE58_0 .net "MULH", 31 0, L_012C1960; 1 drivers
v012BF328_0 .net "MULHSU", 31 0, L_012C19B8; 1 drivers
v012BF010_0 .net "MULHU", 31 0, L_012C15F0; 1 drivers
v012BEF60_0 .net "OR", 31 0, L_00C215F8; 1 drivers
v012BEFB8_0 .net "REM", 31 0, L_012C1540; 1 drivers
v012BF1C8_0 .net "REMU", 31 0, L_012C1280; 1 drivers
v012BF170_0 .var "RESULT", 31 0;
v012BF380_0 .net "SELECT", 4 0, v012BF850_0; 1 drivers
v012BEC48_0 .net "SLL", 31 0, L_012BF900; 1 drivers
v012BF278_0 .net "SLT", 31 0, L_012BFA08; 1 drivers
v012BF220_0 .net "SLTU", 31 0, L_012BFCC8; 1 drivers
v012BF2D0_0 .net "SRA", 31 0, L_012C1598; 1 drivers
v012BECA0_0 .net "SRL", 31 0, L_012BFD20; 1 drivers
v012BECF8_0 .net "SUB", 31 0, L_012BFAB8; 1 drivers
v012BED50_0 .net "XOR", 31 0, L_00C215C0; 1 drivers
v012BF9B0_0 .net *"_s10", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v012BFB10_0 .net *"_s14", 0 0, L_012BFC70; 1 drivers
v012BFF30_0 .net *"_s16", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v012BFC18_0 .net *"_s18", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v012BF8A8_0 .net *"_s49", 0 0, L_012C1330; 1 drivers
v012BFD78_0 .net *"_s6", 0 0, L_012BF958; 1 drivers
v012BFED8_0 .net *"_s8", 31 0, C4<00000000000000000000000000000001>; 1 drivers
E_01284708/0 .event edge, v012BF380_0, v00C2E900_0, v012BECF8_0, v012BEC48_0;
E_01284708/1 .event edge, v012BF278_0, v012BF220_0, v012BED50_0, v012BECA0_0;
E_01284708/2 .event edge, v012BF2D0_0, v012BEF60_0, v00C2E958_0, v012BF068_0;
E_01284708/3 .event edge, v012BEE58_0, v012BF328_0, v012BF010_0, v012BF0C0_0;
E_01284708/4 .event edge, v012BF118_0, v012BEFB8_0, v012BF1C8_0;
E_01284708 .event/or E_01284708/0, E_01284708/1, E_01284708/2, E_01284708/3, E_01284708/4;
L_012BFBC0 .delay (2,2,2) L_012BFBC0/d;
L_012BFBC0/d .arith/sum 32, v012BFE80_0, v012BFF88_0;
L_012BFAB8 .delay (2,2,2) L_012BFAB8/d;
L_012BFAB8/d .arith/sub 32, v012BFE80_0, v012BFF88_0;
L_012BF900 .delay (1,1,1) L_012BF900/d;
L_012BF900/d .shift/l 32, v012BFE80_0, v012BFF88_0;
L_012BF958 .cmp/gt.s 32, v012BFF88_0, v012BFE80_0;
L_012BFA08 .delay (1,1,1) L_012BFA08/d;
L_012BFA08/d .functor MUXZ 32, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000001>, L_012BF958, C4<>;
L_012BFC70 .cmp/gt 32, v012BFF88_0, v012BFE80_0;
L_012BFCC8 .delay (1,1,1) L_012BFCC8/d;
L_012BFCC8/d .functor MUXZ 32, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000001>, L_012BFC70, C4<>;
L_012BFD20 .delay (1,1,1) L_012BFD20/d;
L_012BFD20/d .shift/r 32, v012BFE80_0, v012BFF88_0;
L_012C1598 .delay (1,1,1) L_012C1598/d;
L_012C1598/d .shift/r 32, v012BFE80_0, v012BFF88_0;
L_012C12D8 .delay (3,3,3) L_012C12D8/d;
L_012C12D8/d .arith/mult 32, v012BFE80_0, v012BFF88_0;
L_012C1960 .delay (3,3,3) L_012C1960/d;
L_012C1960/d .arith/mult 32, v012BFE80_0, v012BFF88_0;
L_012C19B8 .delay (3,3,3) L_012C19B8/d;
L_012C19B8/d .arith/mult 32, v012BFE80_0, v012BFF88_0;
L_012C15F0 .delay (3,3,3) L_012C15F0/d;
L_012C15F0/d .arith/mult 32, v012BFE80_0, v012BFF88_0;
L_012C13E0 .delay (3,3,3) L_012C13E0/d;
L_012C13E0/d .arith/div 32, v012BFE80_0, v012BFF88_0;
L_012C1A10 .delay (3,3,3) L_012C1A10/d;
L_012C1A10/d .arith/div 32, v012BFE80_0, v012BFF88_0;
L_012C1540 .delay (3,3,3) L_012C1540/d;
L_012C1540/d .arith/mod 32, v012BFE80_0, v012BFF88_0;
L_012C1280 .delay (3,3,3) L_012C1280/d;
L_012C1280/d .arith/mod 32, v012BFE80_0, v012BFF88_0;
L_012C1330 .reduce/or v012BF170_0;
L_012C14E8 .part v012BF170_0, 31, 1;
L_012C1A68 .part L_012BFCC8, 0, 1;
    .scope S_00C2A090;
T_0 ;
    %wait E_01284708;
    %load/v 8, v012BF380_0, 5;
    %cmpi/u 8, 0, 5;
    %jmp/1 T_0.0, 6;
    %cmpi/u 8, 1, 5;
    %jmp/1 T_0.1, 6;
    %cmpi/u 8, 2, 5;
    %jmp/1 T_0.2, 6;
    %cmpi/u 8, 3, 5;
    %jmp/1 T_0.3, 6;
    %cmpi/u 8, 4, 5;
    %jmp/1 T_0.4, 6;
    %cmpi/u 8, 5, 5;
    %jmp/1 T_0.5, 6;
    %cmpi/u 8, 6, 5;
    %jmp/1 T_0.6, 6;
    %cmpi/u 8, 7, 5;
    %jmp/1 T_0.7, 6;
    %cmpi/u 8, 8, 5;
    %jmp/1 T_0.8, 6;
    %cmpi/u 8, 9, 5;
    %jmp/1 T_0.9, 6;
    %cmpi/u 8, 10, 5;
    %jmp/1 T_0.10, 6;
    %cmpi/u 8, 11, 5;
    %jmp/1 T_0.11, 6;
    %cmpi/u 8, 12, 5;
    %jmp/1 T_0.12, 6;
    %cmpi/u 8, 13, 5;
    %jmp/1 T_0.13, 6;
    %cmpi/u 8, 14, 5;
    %jmp/1 T_0.14, 6;
    %cmpi/u 8, 15, 5;
    %jmp/1 T_0.15, 6;
    %cmpi/u 8, 16, 5;
    %jmp/1 T_0.16, 6;
    %cmpi/u 8, 17, 5;
    %jmp/1 T_0.17, 6;
    %set/v v012BF170_0, 0, 32;
    %jmp T_0.19;
T_0.0 ;
    %load/v 8, v00C2E900_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.1 ;
    %load/v 8, v012BECF8_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.2 ;
    %load/v 8, v012BEC48_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.3 ;
    %load/v 8, v012BF278_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.4 ;
    %load/v 8, v012BF220_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.5 ;
    %load/v 8, v012BED50_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.6 ;
    %load/v 8, v012BECA0_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.7 ;
    %load/v 8, v012BF2D0_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.8 ;
    %load/v 8, v012BEF60_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.9 ;
    %load/v 8, v00C2E958_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.10 ;
    %load/v 8, v012BF068_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.11 ;
    %load/v 8, v012BEE58_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.12 ;
    %load/v 8, v012BF328_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.13 ;
    %load/v 8, v012BF010_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.14 ;
    %load/v 8, v012BF0C0_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.15 ;
    %load/v 8, v012BF118_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.16 ;
    %load/v 8, v012BEFB8_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.17 ;
    %load/v 8, v012BF1C8_0, 32;
    %set/v v012BF170_0, 8, 32;
    %jmp T_0.19;
T_0.19 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_00C2A1A0;
T_1 ;
    %vpi_call 2 99 "$monitor", $time, " OPERAND1: %b, OPERAND2: %b, ALUOP: %b, ALURESULT: %b", v012BFE80_0, v012BFF88_0, v012BF850_0, v012BFDD0_0;
    %end;
    .thread T_1;
    .scope S_00C2A1A0;
T_2 ;
    %movi 8, 20, 32;
    %set/v v012BFE80_0, 8, 32;
    %movi 8, 10, 32;
    %set/v v012BFF88_0, 8, 32;
    %vpi_call 2 109 "$display", "OPERAND1 + OPERAND2";
    %set/v v012BF850_0, 0, 5;
    %delay 5, 0;
    %vpi_call 2 113 "$display", "OPERAND1 - OPERAND2";
    %movi 8, 1, 5;
    %set/v v012BF850_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 117 "$display", "OPERAND1 | OPERAND2";
    %movi 8, 8, 5;
    %set/v v012BF850_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 121 "$display", "OPERAND1 & OPERAND2";
    %movi 8, 9, 5;
    %set/v v012BF850_0, 8, 5;
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "alu.v";
