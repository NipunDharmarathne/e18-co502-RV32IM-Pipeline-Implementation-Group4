#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0122A870 .scope module, "alu_tb" "alu_tb" 2 88;
 .timescale 0 0;
v010C00B0_0 .var "ALUOP", 4 0;
v010C0108_0 .net "ALURESULT", 31 0, v010BEF00_0; 1 drivers
v010C03C8_0 .net "EQ_FLAG", 0 0, L_010C10E0; 1 drivers
v010C0420_0 .net "LTU_FLAG", 0 0, L_010BFB30; 1 drivers
v010C01B8_0 .net "LT_FLAG", 0 0, L_010BFDF0; 1 drivers
v010C0210_0 .var "OPERAND1", 31 0;
v010C04D0_0 .var "OPERAND2", 31 0;
S_0122AD38 .scope module, "myalu" "alu" 2 96, 2 8, S_0122A870;
 .timescale 0 0;
L_010B6D50/d .functor XOR 32, v010C0210_0, v010C04D0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_010B6D50 .delay (1,1,1) L_010B6D50/d;
L_010B6E50/d .functor OR 32, v010C0210_0, v010C04D0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_010B6E50 .delay (1,1,1) L_010B6E50/d;
L_010B6E88/d .functor AND 32, v010C0210_0, v010C04D0_0, C4<11111111111111111111111111111111>, C4<11111111111111111111111111111111>;
L_010B6E88 .delay (1,1,1) L_010B6E88/d;
L_010C10E0 .functor NOT 1, L_010BFCE8, C4<0>, C4<0>, C4<0>;
v0122E958_0 .net "ADD", 31 0, L_010BF768; 1 drivers
v0122E9B0_0 .net "AND", 31 0, L_010B6E88; 1 drivers
v0122EA08_0 .net "DATA1", 31 0, v010C0210_0; 1 drivers
v01221530_0 .net "DATA2", 31 0, v010C04D0_0; 1 drivers
v010BF168_0 .net "DIV", 31 0, L_010BFEF8; 1 drivers
v010BEDA0_0 .net "DIVU", 31 0, L_010C0000; 1 drivers
v010BF270_0 .alias "EQ_FLAG", 0 0, v010C03C8_0;
v010BF480_0 .net "FORWARD", 0 0, L_010BFE48; 1 drivers
v010BEFB0_0 .alias "LTU_FLAG", 0 0, v010C0420_0;
v010BF218_0 .alias "LT_FLAG", 0 0, v010C01B8_0;
v010BF3D0_0 .net "MUL", 31 0, L_010BFA28; 1 drivers
v010BEDF8_0 .net "MULH", 31 0, L_010BF8C8; 1 drivers
v010BF2C8_0 .net "MULHSU", 31 0, L_010BFD98; 1 drivers
v010BF1C0_0 .net "MULHU", 31 0, L_010BF6B8; 1 drivers
v010BEE50_0 .net "OR", 31 0, L_010B6E50; 1 drivers
v010BED48_0 .net "REM", 31 0, L_010BFA80; 1 drivers
v010BEEA8_0 .net "REMU", 31 0, L_010BFAD8; 1 drivers
v010BEF00_0 .var "RESULT", 31 0;
v010BF320_0 .net "SELECT", 4 0, v010C00B0_0; 1 drivers
v010BF378_0 .net "SLL", 31 0, L_010BF818; 1 drivers
v010BF428_0 .net "SLT", 31 0, L_010BF920; 1 drivers
v010BEF58_0 .net "SLTU", 31 0, L_010BF870; 1 drivers
v010BF110_0 .net "SRA", 31 0, L_010BFD40; 1 drivers
v010BF008_0 .net "SRL", 31 0, L_010BF9D0; 1 drivers
v010BF060_0 .net "SUB", 31 0, L_010BF7C0; 1 drivers
v010BF0B8_0 .net "XOR", 31 0, L_010B6D50; 1 drivers
v010C02C0_0 .net *"_s10", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v010C0058_0 .net *"_s12", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v010C0370_0 .net *"_s16", 0 0, L_010BF978; 1 drivers
v010C0318_0 .net *"_s18", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v010C0160_0 .net *"_s20", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v010C0478_0 .net *"_s51", 0 0, L_010BFCE8; 1 drivers
v010C0268_0 .net *"_s8", 0 0, L_010BF710; 1 drivers
E_010B62C0/0 .event edge, v010BF320_0, v010BF480_0, v0122E958_0, v010BF060_0;
E_010B62C0/1 .event edge, v010BF378_0, v010BF428_0, v010BEF58_0, v010BF0B8_0;
E_010B62C0/2 .event edge, v010BF008_0, v010BF110_0, v010BEE50_0, v0122E9B0_0;
E_010B62C0/3 .event edge, v010BF3D0_0, v010BEDF8_0, v010BF2C8_0, v010BF1C0_0;
E_010B62C0/4 .event edge, v010BF168_0, v010BEDA0_0, v010BED48_0, v010BEEA8_0;
E_010B62C0 .event/or E_010B62C0/0, E_010B62C0/1, E_010B62C0/2, E_010B62C0/3, E_010B62C0/4;
L_010BFE48 .delay (1,1,1) L_010BFE48/d;
L_010BFE48/d .part v010C04D0_0, 0, 1;
L_010BF768 .delay (2,2,2) L_010BF768/d;
L_010BF768/d .arith/sum 32, v010C0210_0, v010C04D0_0;
L_010BF7C0 .delay (2,2,2) L_010BF7C0/d;
L_010BF7C0/d .arith/sub 32, v010C0210_0, v010C04D0_0;
L_010BF818 .delay (1,1,1) L_010BF818/d;
L_010BF818/d .shift/l 32, v010C0210_0, v010C04D0_0;
L_010BF710 .cmp/gt.s 32, v010C04D0_0, v010C0210_0;
L_010BF920 .delay (1,1,1) L_010BF920/d;
L_010BF920/d .functor MUXZ 32, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000001>, L_010BF710, C4<>;
L_010BF978 .cmp/gt 32, v010C04D0_0, v010C0210_0;
L_010BF870 .delay (1,1,1) L_010BF870/d;
L_010BF870/d .functor MUXZ 32, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000001>, L_010BF978, C4<>;
L_010BF9D0 .delay (1,1,1) L_010BF9D0/d;
L_010BF9D0/d .shift/r 32, v010C0210_0, v010C04D0_0;
L_010BFD40 .delay (1,1,1) L_010BFD40/d;
L_010BFD40/d .shift/r 32, v010C0210_0, v010C04D0_0;
L_010BFA28 .delay (3,3,3) L_010BFA28/d;
L_010BFA28/d .arith/mult 32, v010C0210_0, v010C04D0_0;
L_010BF8C8 .delay (3,3,3) L_010BF8C8/d;
L_010BF8C8/d .arith/mult 32, v010C0210_0, v010C04D0_0;
L_010BFD98 .delay (3,3,3) L_010BFD98/d;
L_010BFD98/d .arith/mult 32, v010C0210_0, v010C04D0_0;
L_010BF6B8 .delay (3,3,3) L_010BF6B8/d;
L_010BF6B8/d .arith/mult 32, v010C0210_0, v010C04D0_0;
L_010BFEF8 .delay (3,3,3) L_010BFEF8/d;
L_010BFEF8/d .arith/div 32, v010C0210_0, v010C04D0_0;
L_010C0000 .delay (3,3,3) L_010C0000/d;
L_010C0000/d .arith/div 32, v010C0210_0, v010C04D0_0;
L_010BFA80 .delay (3,3,3) L_010BFA80/d;
L_010BFA80/d .arith/mod 32, v010C0210_0, v010C04D0_0;
L_010BFAD8 .delay (3,3,3) L_010BFAD8/d;
L_010BFAD8/d .arith/mod 32, v010C0210_0, v010C04D0_0;
L_010BFCE8 .reduce/or v010BEF00_0;
L_010BFDF0 .part v010BEF00_0, 31, 1;
L_010BFB30 .part L_010BF870, 0, 1;
    .scope S_0122AD38;
T_0 ;
    %wait E_010B62C0;
    %load/v 8, v010BF320_0, 5;
    %cmpi/u 8, 0, 5;
    %jmp/1 T_0.0, 6;
    %cmpi/u 8, 1, 5;
    %jmp/1 T_0.1, 6;
    %cmpi/u 8, 2, 5;
    %jmp/1 T_0.2, 6;
    %cmpi/u 8, 3, 5;
    %jmp/1 T_0.3, 6;
    %cmpi/u 8, 4, 5;
    %jmp/1 T_0.4, 6;
    %cmpi/u 8, 5, 5;
    %jmp/1 T_0.5, 6;
    %cmpi/u 8, 6, 5;
    %jmp/1 T_0.6, 6;
    %cmpi/u 8, 7, 5;
    %jmp/1 T_0.7, 6;
    %cmpi/u 8, 8, 5;
    %jmp/1 T_0.8, 6;
    %cmpi/u 8, 9, 5;
    %jmp/1 T_0.9, 6;
    %cmpi/u 8, 10, 5;
    %jmp/1 T_0.10, 6;
    %cmpi/u 8, 11, 5;
    %jmp/1 T_0.11, 6;
    %cmpi/u 8, 12, 5;
    %jmp/1 T_0.12, 6;
    %cmpi/u 8, 13, 5;
    %jmp/1 T_0.13, 6;
    %cmpi/u 8, 14, 5;
    %jmp/1 T_0.14, 6;
    %cmpi/u 8, 15, 5;
    %jmp/1 T_0.15, 6;
    %cmpi/u 8, 16, 5;
    %jmp/1 T_0.16, 6;
    %cmpi/u 8, 17, 5;
    %jmp/1 T_0.17, 6;
    %cmpi/u 8, 18, 5;
    %jmp/1 T_0.18, 6;
    %set/v v010BEF00_0, 0, 32;
    %jmp T_0.20;
T_0.0 ;
    %load/v 8, v010BF480_0, 1;
    %mov 9, 0, 31;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.1 ;
    %load/v 8, v0122E958_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.2 ;
    %load/v 8, v010BF060_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.3 ;
    %load/v 8, v010BF378_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.4 ;
    %load/v 8, v010BF428_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.5 ;
    %load/v 8, v010BEF58_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.6 ;
    %load/v 8, v010BF0B8_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.7 ;
    %load/v 8, v010BF008_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.8 ;
    %load/v 8, v010BF110_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.9 ;
    %load/v 8, v010BEE50_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.10 ;
    %load/v 8, v0122E9B0_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.11 ;
    %load/v 8, v010BF3D0_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.12 ;
    %load/v 8, v010BEDF8_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.13 ;
    %load/v 8, v010BF2C8_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.14 ;
    %load/v 8, v010BF1C0_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.15 ;
    %load/v 8, v010BF168_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.16 ;
    %load/v 8, v010BEDA0_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.17 ;
    %load/v 8, v010BED48_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.18 ;
    %load/v 8, v010BEEA8_0, 32;
    %set/v v010BEF00_0, 8, 32;
    %jmp T_0.20;
T_0.20 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0122A870;
T_1 ;
    %vpi_call 2 101 "$monitor", $time, " OPERAND1: %b, OPERAND2: %b, ALUOP: %b, ALURESULT: %b", v010C0210_0, v010C04D0_0, v010C00B0_0, v010C0108_0;
    %end;
    .thread T_1;
    .scope S_0122A870;
T_2 ;
    %movi 8, 20, 32;
    %set/v v010C0210_0, 8, 32;
    %movi 8, 10, 32;
    %set/v v010C04D0_0, 8, 32;
    %vpi_call 2 111 "$display", "OPERAND1 + OPERAND2";
    %movi 8, 1, 5;
    %set/v v010C00B0_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 115 "$display", "OPERAND1 - OPERAND2";
    %movi 8, 2, 5;
    %set/v v010C00B0_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 119 "$display", "OPERAND1 | OPERAND2";
    %movi 8, 9, 5;
    %set/v v010C00B0_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 123 "$display", "OPERAND1 & OPERAND2";
    %movi 8, 10, 5;
    %set/v v010C00B0_0, 8, 5;
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "alu.v";
