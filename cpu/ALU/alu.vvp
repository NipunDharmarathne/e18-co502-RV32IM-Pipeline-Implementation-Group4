#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0110C078 .scope module, "alu_tb" "alu_tb" 2 265;
 .timescale 0 0;
v01146D80_0 .var "ALUOP", 4 0;
v01146E30_0 .net "ALURESULT", 31 0, v01147618_0; 1 drivers
v01146F38_0 .net "EQ_FLAG", 0 0, L_0114CF00; 1 drivers
v01146FE8_0 .net "LTU_FLAG", 0 0, L_0114C788; 1 drivers
v0114B8C0_0 .net "LT_FLAG", 0 0, L_0114C368; 1 drivers
v0114C2B8_0 .var "OPERAND1", 31 0;
v0114C1B0_0 .var "OPERAND2", 31 0;
S_0110BD48 .scope module, "myalu" "alu" 2 273, 2 8, S_0110C078;
 .timescale 0 0;
L_010FE248/d .functor BUFZ 32, v0114C1B0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_010FE248 .delay (1,1,1) L_010FE248/d;
L_0114C870/d .functor XOR 32, v0114C2B8_0, v0114C1B0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0114C870 .delay (1,1,1) L_0114C870/d;
L_0114CB10/d .functor OR 32, v0114C2B8_0, v0114C1B0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0114CB10 .delay (1,1,1) L_0114CB10/d;
L_0114CD78/d .functor AND 32, v0114C2B8_0, v0114C1B0_0, C4<11111111111111111111111111111111>, C4<11111111111111111111111111111111>;
L_0114CD78 .delay (1,1,1) L_0114CD78/d;
L_0114CF00 .functor NOT 1, L_0114C6D8, C4<0>, C4<0>, C4<0>;
v010E4F88_0 .net "ADD", 31 0, L_0114BA20; 1 drivers
v010E4BC0_0 .net "AND", 31 0, L_0114CD78; 1 drivers
v010E4C18_0 .net "DATA1", 31 0, v0114C2B8_0; 1 drivers
v010E4ED8_0 .net "DATA2", 31 0, v0114C1B0_0; 1 drivers
v010E4CC8_0 .net "DIV", 31 0, L_0114C260; 1 drivers
v010E4D20_0 .net "DIVU", 31 0, L_0114C050; 1 drivers
v010E4D78_0 .alias "EQ_FLAG", 0 0, v01146F38_0;
v010E4E28_0 .net "FORWARD", 31 0, L_010FE248; 1 drivers
v010E4FE0_0 .alias "LTU_FLAG", 0 0, v01146FE8_0;
v01147720_0 .alias "LT_FLAG", 0 0, v0114B8C0_0;
v01147778_0 .net "MUL", 31 0, L_0114BFF8; 1 drivers
v01147510_0 .net "MULH", 31 0, L_0114BD38; 1 drivers
v011474B8_0 .net "MULHSU", 31 0, L_0114BD90; 1 drivers
v01147568_0 .net "MULHU", 31 0, L_0114C100; 1 drivers
v011473B0_0 .net "OR", 31 0, L_0114CB10; 1 drivers
RS_01116524 .resolv tri, L_0114B970, L_0114BC88, L_0114BE98, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v01147358_0 .net8 "PRODUCT", 63 0, RS_01116524; 3 drivers
v011477D0_0 .net "REM", 31 0, L_0114C0A8; 1 drivers
v011475C0_0 .net "REMU", 31 0, L_0114C7E0; 1 drivers
v01147618_0 .var "RESULT", 31 0;
v01147408_0 .net "SELECT", 4 0, v01146D80_0; 1 drivers
v01147460_0 .net "SLL", 31 0, L_0114C158; 1 drivers
v011476C8_0 .net "SLT", 31 0, L_0114BBD8; 1 drivers
v01147670_0 .net "SLTU", 31 0, L_0114BAD0; 1 drivers
v01146908_0 .net "SRA", 31 0, L_0114BB80; 1 drivers
v01147250_0 .net "SRL", 31 0, L_0114BB28; 1 drivers
v01146EE0_0 .net "SUB", 31 0, L_0114B9C8; 1 drivers
v01146C78_0 .net "XOR", 31 0, L_0114C870; 1 drivers
v01146DD8_0 .net *"_s10", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v011468B0_0 .net *"_s12", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v01147300_0 .net *"_s16", 0 0, L_0114BC30; 1 drivers
v01147148_0 .net *"_s18", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v01146858_0 .net *"_s20", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v01146AC0_0 .net *"_s38", 63 0, L_0114BF48; 1 drivers
v011470F0_0 .net *"_s40", 31 0, L_0114B868; 1 drivers
v01146960_0 .net *"_s42", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v011471A0_0 .net *"_s46", 63 0, L_0114BDE8; 1 drivers
v011471F8_0 .net *"_s49", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v011469B8_0 .net *"_s50", 63 0, L_0114C310; 1 drivers
v01147040_0 .net *"_s53", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v011472A8_0 .net *"_s56", 63 0, L_0114C208; 1 drivers
v01146A10_0 .net *"_s58", 31 0, L_0114BCE0; 1 drivers
v01146A68_0 .net *"_s60", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v01146B18_0 .net *"_s64", 63 0, L_0114B918; 1 drivers
v01146B70_0 .net *"_s67", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v01146BC8_0 .net *"_s68", 63 0, L_0114BE40; 1 drivers
v01146CD0_0 .net *"_s71", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v01147098_0 .net *"_s74", 63 0, L_0114BFA0; 1 drivers
v01146C20_0 .net *"_s76", 31 0, L_0114BEF0; 1 drivers
v01146F90_0 .net *"_s78", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v01146D28_0 .net *"_s8", 0 0, L_0114BA78; 1 drivers
v01146E88_0 .net *"_s91", 0 0, L_0114C6D8; 1 drivers
E_010E7748/0 .event edge, v01147408_0, v010E4E28_0, v010E4F88_0, v01146EE0_0;
E_010E7748/1 .event edge, v01147460_0, v011476C8_0, v01147670_0, v01146C78_0;
E_010E7748/2 .event edge, v01147250_0, v01146908_0, v011473B0_0, v010E4BC0_0;
E_010E7748/3 .event edge, v01147778_0, v01147510_0, v011474B8_0, v01147568_0;
E_010E7748/4 .event edge, v010E4CC8_0, v010E4D20_0, v011477D0_0, v011475C0_0;
E_010E7748 .event/or E_010E7748/0, E_010E7748/1, E_010E7748/2, E_010E7748/3, E_010E7748/4;
L_0114BA20 .delay (2,2,2) L_0114BA20/d;
L_0114BA20/d .arith/sum 32, v0114C2B8_0, v0114C1B0_0;
L_0114B9C8 .delay (2,2,2) L_0114B9C8/d;
L_0114B9C8/d .arith/sub 32, v0114C2B8_0, v0114C1B0_0;
L_0114C158 .delay (1,1,1) L_0114C158/d;
L_0114C158/d .shift/l 32, v0114C2B8_0, v0114C1B0_0;
L_0114BA78 .cmp/gt.s 32, v0114C1B0_0, v0114C2B8_0;
L_0114BBD8 .delay (1,1,1) L_0114BBD8/d;
L_0114BBD8/d .functor MUXZ 32, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000001>, L_0114BA78, C4<>;
L_0114BC30 .cmp/gt 32, v0114C1B0_0, v0114C2B8_0;
L_0114BAD0 .delay (1,1,1) L_0114BAD0/d;
L_0114BAD0/d .functor MUXZ 32, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000001>, L_0114BC30, C4<>;
L_0114BB28 .delay (1,1,1) L_0114BB28/d;
L_0114BB28/d .shift/r 32, v0114C2B8_0, v0114C1B0_0;
L_0114BB80 .delay (1,1,1) L_0114BB80/d;
L_0114BB80/d .shift/r 32, v0114C2B8_0, v0114C1B0_0;
L_0114BFF8 .delay (3,3,3) L_0114BFF8/d;
L_0114BFF8/d .arith/mult 32, v0114C2B8_0, v0114C1B0_0;
L_0114B970 .arith/mult 64, v0114C2B8_0, v0114C1B0_0;
L_0114B868 .part RS_01116524, 32, 32;
L_0114BF48 .concat [ 32 32 0 0], L_0114B868, C4<00000000000000000000000000000000>;
L_0114BD38 .delay (3,3,3) L_0114BD38/d;
L_0114BD38/d .part L_0114BF48, 0, 32;
L_0114BDE8 .concat [ 32 32 0 0], v0114C2B8_0, C4<00000000000000000000000000000000>;
L_0114C310 .concat [ 32 32 0 0], v0114C1B0_0, C4<00000000000000000000000000000000>;
L_0114BC88 .arith/mult 64, L_0114BDE8, L_0114C310;
L_0114BCE0 .part RS_01116524, 32, 32;
L_0114C208 .concat [ 32 32 0 0], L_0114BCE0, C4<00000000000000000000000000000000>;
L_0114BD90 .delay (3,3,3) L_0114BD90/d;
L_0114BD90/d .part L_0114C208, 0, 32;
L_0114B918 .concat [ 32 32 0 0], v0114C2B8_0, C4<00000000000000000000000000000000>;
L_0114BE40 .concat [ 32 32 0 0], v0114C1B0_0, C4<00000000000000000000000000000000>;
L_0114BE98 .arith/mult 64, L_0114B918, L_0114BE40;
L_0114BEF0 .part RS_01116524, 32, 32;
L_0114BFA0 .concat [ 32 32 0 0], L_0114BEF0, C4<00000000000000000000000000000000>;
L_0114C100 .delay (3,3,3) L_0114C100/d;
L_0114C100/d .part L_0114BFA0, 0, 32;
L_0114C260 .delay (3,3,3) L_0114C260/d;
L_0114C260/d .arith/div 32, v0114C2B8_0, v0114C1B0_0;
L_0114C050 .delay (3,3,3) L_0114C050/d;
L_0114C050/d .arith/div 32, v0114C2B8_0, v0114C1B0_0;
L_0114C0A8 .delay (3,3,3) L_0114C0A8/d;
L_0114C0A8/d .arith/mod 32, v0114C2B8_0, v0114C1B0_0;
L_0114C7E0 .delay (3,3,3) L_0114C7E0/d;
L_0114C7E0/d .arith/mod 32, v0114C2B8_0, v0114C1B0_0;
L_0114C6D8 .reduce/or v01147618_0;
L_0114C368 .part v01147618_0, 31, 1;
L_0114C788 .part L_0114BAD0, 0, 1;
    .scope S_0110BD48;
T_0 ;
    %wait E_010E7748;
    %load/v 8, v01147408_0, 5;
    %cmpi/u 8, 0, 5;
    %jmp/1 T_0.0, 6;
    %cmpi/u 8, 1, 5;
    %jmp/1 T_0.1, 6;
    %cmpi/u 8, 2, 5;
    %jmp/1 T_0.2, 6;
    %cmpi/u 8, 3, 5;
    %jmp/1 T_0.3, 6;
    %cmpi/u 8, 4, 5;
    %jmp/1 T_0.4, 6;
    %cmpi/u 8, 5, 5;
    %jmp/1 T_0.5, 6;
    %cmpi/u 8, 6, 5;
    %jmp/1 T_0.6, 6;
    %cmpi/u 8, 7, 5;
    %jmp/1 T_0.7, 6;
    %cmpi/u 8, 8, 5;
    %jmp/1 T_0.8, 6;
    %cmpi/u 8, 9, 5;
    %jmp/1 T_0.9, 6;
    %cmpi/u 8, 10, 5;
    %jmp/1 T_0.10, 6;
    %cmpi/u 8, 11, 5;
    %jmp/1 T_0.11, 6;
    %cmpi/u 8, 12, 5;
    %jmp/1 T_0.12, 6;
    %cmpi/u 8, 13, 5;
    %jmp/1 T_0.13, 6;
    %cmpi/u 8, 14, 5;
    %jmp/1 T_0.14, 6;
    %cmpi/u 8, 15, 5;
    %jmp/1 T_0.15, 6;
    %cmpi/u 8, 16, 5;
    %jmp/1 T_0.16, 6;
    %cmpi/u 8, 17, 5;
    %jmp/1 T_0.17, 6;
    %cmpi/u 8, 18, 5;
    %jmp/1 T_0.18, 6;
    %set/v v01147618_0, 0, 32;
    %jmp T_0.20;
T_0.0 ;
    %load/v 8, v010E4E28_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.1 ;
    %load/v 8, v010E4F88_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.2 ;
    %load/v 8, v01146EE0_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.3 ;
    %load/v 8, v01147460_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.4 ;
    %load/v 8, v011476C8_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.5 ;
    %load/v 8, v01147670_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.6 ;
    %load/v 8, v01146C78_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.7 ;
    %load/v 8, v01147250_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.8 ;
    %load/v 8, v01146908_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.9 ;
    %load/v 8, v011473B0_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.10 ;
    %load/v 8, v010E4BC0_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.11 ;
    %load/v 8, v01147778_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.12 ;
    %load/v 8, v01147510_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.13 ;
    %load/v 8, v011474B8_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.14 ;
    %load/v 8, v01147568_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.15 ;
    %load/v 8, v010E4CC8_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.16 ;
    %load/v 8, v010E4D20_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.17 ;
    %load/v 8, v011477D0_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.18 ;
    %load/v 8, v011475C0_0, 32;
    %set/v v01147618_0, 8, 32;
    %jmp T_0.20;
T_0.20 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0110C078;
T_1 ;
    %movi 8, 20, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 2, 32;
    %set/v v0114C1B0_0, 8, 32;
    %set/v v01146D80_0, 0, 5;
    %delay 5, 0;
    %vpi_call 2 282 "$display", "Test case 1: Forward operation";
    %vpi_call 2 283 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 284 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 285 "$display", "ALURESULT  : %d", v01146E30_0;
    %movi 8, 1, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 289 "$display", "\012Test case 2: OPERAND1 + OPERAND2";
    %vpi_call 2 290 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 291 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 292 "$display", "ALURESULT  : %d", v01146E30_0;
    %movi 8, 2, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 296 "$display", "\012Test case 3: OPERAND1 - OPERAND2";
    %vpi_call 2 297 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 298 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 299 "$display", "ALURESULT  : %d", v01146E30_0;
    %movi 8, 3, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 303 "$display", "\012Test case 4: OPERAND1 << OPERAND2";
    %vpi_call 2 304 "$display", "OPERAND1   : %b", v0114C2B8_0;
    %vpi_call 2 305 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 306 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 4, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 310 "$display", "\012Test case 5: Set less than (When OPERAND1 > OPERAND2)";
    %vpi_call 2 311 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 312 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 313 "$display", "ALURESULT  : %d", v01146E30_0;
    %movi 8, 2, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 20, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 4, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 320 "$display", "\012Test case 6: Set less than (When OPERAND1 < OPERAND2)";
    %vpi_call 2 321 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 322 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 323 "$display", "ALURESULT  : %d", v01146E30_0;
    %movi 8, 20, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 2, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 5, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 330 "$display", "\012Test case 7: Set less than unsigned (When unsigned(OPERAND1) > unsigned(OPERAND2))";
    %vpi_call 2 331 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 332 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 333 "$display", "ALURESULT  : %d", v01146E30_0;
    %movi 8, 2, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 20, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 5, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 340 "$display", "\012Test case 8: Set less than unsigned(When unsigned(OPERAND1) < unsigned(OPERAND2))";
    %vpi_call 2 341 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 342 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 343 "$display", "ALURESULT  : %d", v01146E30_0;
    %movi 8, 15, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 20, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 6, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 350 "$display", "\012Test case 9: OPERAND1 ^ OPERAND2";
    %vpi_call 2 351 "$display", "OPERAND1   : %b", v0114C2B8_0;
    %vpi_call 2 352 "$display", "OPERAND2   : %b", v0114C1B0_0;
    %vpi_call 2 353 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 20, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 2, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 7, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 360 "$display", "\012Test case 10: OPERAND1 >> OPERAND2";
    %vpi_call 2 361 "$display", "OPERAND1   : %b", v0114C2B8_0;
    %vpi_call 2 362 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 363 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 240, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 2, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 8, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 370 "$display", "\012Test case 11: OPERAND1 >>> OPERAND2";
    %vpi_call 2 371 "$display", "OPERAND1   : %b", v0114C2B8_0;
    %vpi_call 2 372 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 373 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 15, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 20, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 9, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 380 "$display", "\012Test case 12: OPERAND1 | OPERAND2";
    %vpi_call 2 381 "$display", "OPERAND1   : %b", v0114C2B8_0;
    %vpi_call 2 382 "$display", "OPERAND2   : %b", v0114C1B0_0;
    %vpi_call 2 383 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 10, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 387 "$display", "\012Test case 13: OPERAND1 & OPERAND2";
    %vpi_call 2 388 "$display", "OPERAND1   : %b", v0114C2B8_0;
    %vpi_call 2 389 "$display", "OPERAND2   : %b", v0114C1B0_0;
    %vpi_call 2 390 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 10, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 20, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 11, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 397 "$display", "\012Test case 14: MUL";
    %vpi_call 2 398 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 399 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 400 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 401 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 1, 32;
    %set/v v0114C2B8_0, 8, 32;
    %set/v v0114C1B0_0, 1, 32;
    %movi 8, 11, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 408 "$display", "\012Test case 15: MUL";
    %vpi_call 2 409 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 410 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 411 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 412 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 10, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 20, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 12, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 419 "$display", "\012Test case 16: MULH";
    %vpi_call 2 420 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 421 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 422 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 423 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 4, 32;
    %set/v v0114C2B8_0, 8, 32;
    %set/v v0114C1B0_0, 1, 32;
    %movi 8, 12, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 430 "$display", "\012Test case 17: MULH";
    %vpi_call 2 431 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 432 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 433 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 434 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 10, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 20, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 13, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 441 "$display", "\012Test case 18: MULHSU";
    %vpi_call 2 442 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 443 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 444 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 445 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 4, 32;
    %set/v v0114C2B8_0, 8, 32;
    %set/v v0114C1B0_0, 1, 32;
    %movi 8, 13, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 452 "$display", "\012Test case 19: MULHSU";
    %vpi_call 2 453 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 454 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 455 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 456 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 10, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 20, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 14, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 463 "$display", "\012Test case 20: MULHU";
    %vpi_call 2 464 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 465 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 466 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 467 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 4, 32;
    %set/v v0114C2B8_0, 8, 32;
    %set/v v0114C1B0_0, 1, 32;
    %movi 8, 14, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 474 "$display", "\012Test case 21: MULHU";
    %vpi_call 2 475 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 476 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 477 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 478 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 20, 32;
    %set/v v0114C2B8_0, 8, 32;
    %movi 8, 10, 32;
    %set/v v0114C1B0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 485 "$display", "\012Test case 22: DIV";
    %vpi_call 2 486 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 487 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 488 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 489 "$display", "ALURESULT  : %b", v01146E30_0;
    %movi 8, 16, 5;
    %set/v v01146D80_0, 8, 5;
    %delay 5, 0;
    %vpi_call 2 493 "$display", "\012Test case 23: DIVU";
    %vpi_call 2 494 "$display", "OPERAND1   : %d", v0114C2B8_0;
    %vpi_call 2 495 "$display", "OPERAND2   : %d", v0114C1B0_0;
    %vpi_call 2 496 "$display", "ALURESULT  : %d", v01146E30_0;
    %vpi_call 2 497 "$display", "ALURESULT  : %b", v01146E30_0;
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "alu.v";
