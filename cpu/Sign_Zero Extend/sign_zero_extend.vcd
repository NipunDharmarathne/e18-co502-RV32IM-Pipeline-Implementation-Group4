$date
	Mon May 01 12:07:09 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Sign_Zero_Extend_tb $end
$var wire 32 ! U_TYPE [31:0] $end
$var wire 32 " S_TYPE [31:0] $end
$var wire 32 # J_TYPE [31:0] $end
$var wire 32 $ I_TYPE [31:0] $end
$var wire 32 % B_TYPE [31:0] $end
$var reg 32 & INSTRUCTION [31:0] $end
$scope module sign_zero_extend $end
$var wire 32 ' INSTRUCTION [31:0] $end
$var reg 32 ( B_TYPE [31:0] $end
$var reg 32 ) I_TYPE [31:0] $end
$var reg 32 * J_TYPE [31:0] $end
$var reg 32 + S_TYPE [31:0] $end
$var reg 32 , U_TYPE [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ,
bx +
bx *
bx )
bx (
b10101110010101110101010101111010 '
b10101110010101110101010101111010 &
bx %
bx $
bx #
bx "
bx !
$end
#1
b11111111111111111111101011100101 $
b11111111111111111111101011100101 )
b11111111111111111111001011101010 %
b11111111111111111111001011101010 (
b11111111111111111111101011101010 "
b11111111111111111111101011101010 +
b11111111111101110101101011100100 #
b11111111111101110101101011100100 *
b10101110010101110101000000000000 !
b10101110010101110101000000000000 ,
#10
b1010100100101000110111110111011 &
b1010100100101000110111110111011 '
#11
b10101001001 $
b10101001001 )
b110101011110 %
b110101011110 (
b10101011111 "
b10101011111 +
b1000110110101001000 #
b1000110110101001000 *
b1010100100101000110000000000000 !
b1010100100101000110000000000000 ,
#20
b1111011111011010101010100010011 &
b1111011111011010101010100010011 '
#21
b11110 $
b11110 )
b11110101010 %
b11110101010 (
b11110101010 "
b11110101010 +
b11010101011110111110 #
b11010101011110111110 *
b1111011111011010101000000000000 !
b1111011111011010101000000000000 ,
#30
